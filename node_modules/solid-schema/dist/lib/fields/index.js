"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.fields = void 0;
const any_1 = require("./standard/any");
const array_1 = require("./standard/array");
const boolean_1 = require("./standard/boolean");
const number_1 = require("./standard/number");
const object_1 = require("./standard/object");
const record_1 = require("./standard/record");
const string_1 = require("./standard/string");
const and_1 = require("./advanced/and");
const or_1 = require("./advanced/or");
const constant_1 = require("./advanced/constant");
const tuple_1 = require("./advanced/tuple");
const nullable_1 = require("./advanced/nullable");
__exportStar(require("./base"), exports);
var fields;
(function (fields) {
    fields.any = () => new any_1.AnyField();
    fields.array = (model) => new array_1.ArrayField(model);
    fields.boolean = () => new boolean_1.BooleanField();
    fields.number = () => new number_1.NumberField();
    fields.object = (model) => new object_1.ObjectField(model);
    fields.nullable = (model) => new nullable_1.NullableField(model);
    fields.record = (key, value) => new record_1.RecordField(key, value);
    fields.string = () => new string_1.StringField();
    fields.or = (...models) => new or_1.OrField(...models);
    fields.and = (...models) => new and_1.AndField(...models);
    fields.constant = (value) => new constant_1.ConstantField(value);
    fields.tuple = (...values) => new tuple_1.TupleField(...values);
})(fields = exports.fields || (exports.fields = {}));
