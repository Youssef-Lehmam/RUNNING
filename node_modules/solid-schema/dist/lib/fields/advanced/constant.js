"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConstantField = void 0;
const base_1 = require("../base");
const types_1 = require("../../utils/types");
/**
 * Constant field.
 * Field matching only one pre-defined value. This uses `===` to compare. Try marking the value `as const` for the typings to work.
 *
 * @example
 * ```ts
 * const schema1 = fields.constant("hello" as const);
 * const schema2 = fields.constant(1 as const);
 * const schema3 = fields.constant(Symbol("hello") as const);
 *
 * schema1.create("hello");
 * schema2.create(1);
 * schema3.create("hello");
 * ```
 */
class ConstantField extends base_1.FieldModel {
    constructor(value) {
        super();
        this.value = value;
    }
    validate(value, key = "value") {
        if (this.value !== value) {
            throw new TypeError(`'${key}' must be '${this.type}'`);
        }
        return true;
    }
    get name() {
        return `ConstantField<${this.type}>`;
    }
    get type() {
        return (0, types_1.stringifyValue)(this.value);
    }
}
exports.ConstantField = ConstantField;
